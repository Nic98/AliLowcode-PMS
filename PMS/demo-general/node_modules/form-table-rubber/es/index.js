import _extends from "@babel/runtime/helpers/extends";
import _Button from "antd/es/button";
import _Form from "antd/es/form";
import _Input from "antd/es/input";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["api", "type"];
import * as React from 'react';
import { useState, forwardRef } from 'react';
// import type { FormProps } from 'antd';

// type FieldType = {
//   username?: string;
//   password?: string;
// };

// const onFinish: FormProps<FieldType>['onFinish'] = (values:any) => {
//   console.log('Success:', values);
// };

// const onFinishFailed: FormProps<FieldType>['onFinishFailed'] = (errorInfo:any) => {
//   console.log('Failed:', errorInfo);
// };

var ExampleComponent = function ExampleComponent(props, ref) {
  var api = props.api,
    _props$type = props.type,
    type = _props$type === void 0 ? 'tableForm' : _props$type,
    others = _objectWithoutPropertiesLoose(props, _excluded);
  var _useState = useState(''),
    name = _useState[0],
    setName = _useState[1];
  var _useState2 = useState(''),
    id = _useState2[0],
    setId = _useState2[1];
  return /*#__PURE__*/React.createElement("div", {
    className: "lowcode-spa-queryform",
    ref: ref
  }, /*#__PURE__*/React.createElement(_Form, _extends({
    name: "basic",
    labelCol: {
      span: 8
    },
    wrapperCol: {
      span: 16
    },
    style: {
      marginTop: 20,
      maxWidth: 500,
      display: 'flex',
      flexDirection: 'row'
    }
    // onFinish={onFinish}
    // onFinishFailed={onFinishFailed}
    ,
    autoComplete: "off",
    ref: ref
  }, others), /*#__PURE__*/React.createElement(_Form.Item, {
    label: "Name",
    name: "name"
  }, /*#__PURE__*/React.createElement(_Input, {
    onChange: function onChange(v) {
      setName(v.target.value);
    }
  })), /*#__PURE__*/React.createElement(_Form.Item, {
    label: "ID",
    name: "id"
  }, /*#__PURE__*/React.createElement(_Input, {
    onChange: function onChange(v) {
      setId(v.target.value);
    }
  })), type === 'tableForm' ? /*#__PURE__*/React.createElement(_Form.Item, {
    wrapperCol: {
      offset: 8,
      span: 16
    }
  }, /*#__PURE__*/React.createElement(_Button, {
    type: "primary",
    htmlType: "submit",
    onClick: function onClick() {
      console.log(name, id);
      var xhr = new XMLHttpRequest();
      xhr.open("GET", "https://" + (api || "proapi.azurewebsites.net/api/rule?token%20=%20123&current=1&pageSize=100") + "/" + name + id, true);
      xhr.onreadystatechange = function () {
        if (xhr.readyState === 4 && xhr.status === 200) {
          var res = JSON.parse(xhr.responseText);
          var data = res.data;
          console.log(data);
        }
      };
      xhr.send();
    }
  }, "Search")) : null));
};
var RefExampleComponent = /*#__PURE__*/forwardRef(ExampleComponent);
RefExampleComponent.displayName = 'ExampleComponent';
export default RefExampleComponent;